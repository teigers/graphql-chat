type Query { 
  user(id: ID!): User

  users: [User]!

  chat(chatId: ID!): Chat
}

type Mutation {
  createUser(userName: String!): User!

  createChat(input: ChatInput!): Chat!

  sendMessage(chatId: ID! input: MessageInput!): Message!
}

type Subscription {
  messageFeed(userId: ID!): Message!
}

type User {
  id: ID!
  userName: String!
  chats: [Chat]!
}

type Chat {
  id: ID!
  title: String!  
  participants: [User!]!
  messages: [Message]!
  created: String!
}

type Message {
  id: ID!
  created: String!
  message: String! 

  """ 
    Ideally the two fields below would return the types User and Chat, but since subscriptions
    doesnt't currently support data sources we'll solve it the simple way.
    
    https://github.com/apollographql/apollo-server/issues/1526
  """
  fromId: ID!
  chatId: ID!

}

input MessageInput {
  from: ID!
  message: String!
}

input ChatInput {
  title: String!
  participants: [ID!]!
}